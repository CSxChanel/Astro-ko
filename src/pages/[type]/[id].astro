---
import Layout from "../../layouts/Layout.astro";

import {
	getMediaDetails
} from "../../utils/api.js";

const {
	type,
	id
} = Astro.params;

interface Genre {
	id: number;
	name: string;
}

interface ProductionCountry {
	name: string;
}

interface MediaDetails {
	title: string;
	overview: string;
	status: string;
	release_date: string;
	genres: Genre[];
	poster_path: string;
	backdrop_path: string;
	production_countries: ProductionCountry[];
}







const mediaDetails = await getMediaDetails(type, id);

if (!mediaDetails) {
	console.error("No media details found");
}

---

{
	mediaDetails ? (
		<Layout
			title={mediaDetails.title || 'Detail'}
			description={mediaDetails.overview || 'No description available'}
			ogImage={mediaDetails.backdrop_path ? `https://image.tmdb.org/t/p/w500${mediaDetails.backdrop_path}`: '/default-image.jpg'}
			>
			<main class="h-screen bg-lime-700">
				<div class="relative">
					{mediaDetails.backdrop_path ? (
						<img
						class="w-full h-[300px] md:h-auto object-cover object-center"
						src={`https://image.tmdb.org/t/p/w500${mediaDetails.backdrop_path}` }
						alt={mediaDetails.title }
						style={ {
							maskImage: "linear-gradient(to bottom, rgba(0, 0, 0, 1) 60%, transparent 100%)",
							WebkitMaskImage: "linear-gradient(to bottom, rgba(0, 0, 0, 1) 60%, transparent 100%)"
						}}
						/>
				): (
					<p>
						Backdrop image not available
					</p>
				)}
			</div>
			<div class="container flex">
				<img
				class="mr-5 z-20 md:-my-36 -my-24 mb-14 md:mb-20 w-[45%] md:w-[50%] h-auto md:h-auto object-cover object-center border-2 rounded-2xl"
				src={`https://image.tmdb.org/t/p/w500${mediaDetails.poster_path}` }
				alt={mediaDetails.title }
				/>
			<div class="flex-col">
				<h1 class="font-primary font-semibold md:font-bold text-xl md:text-5xl md: md:my-10 my-2">
					{mediaDetails.title || 'Title not available'
					}
				</h1>
				<div class="font-bold md:text-5xl flex">
					Genres &nbsp;
					<ul class="list-disc list-inside">
						{mediaDetails.genres && mediaDetails.genres.length > 0 ? (
							mediaDetails.genres.map((genre) => (
								<li key={genre.id }>{genre.name
									}</li>
							))
						): (
							<li>No genres available</li>
						)}
					</ul>

				</div>
			</div>
		</div>

		<div class="container">
			<p class="font-bold md:text-2xl my-2">
				Release Date:
				<span class="bg-slate-700 px-2 rounded-xl">
					{mediaDetails.release_date || 'Unknown'
					}
				</span>
			</p>

			<p class="font-bold md:text-2xl my-2">
				Status:
				<span class="bg-slate-700 px-2 rounded-xl">
					{mediaDetails.status || 'Unknown'
					}
				</span>
			</p>
			<p class="font-bold md:text-2xl my-2">
				Production Countries:
				<span class="bg-slate-700 px-2 rounded-xl">
					{mediaDetails.production_countries
					? mediaDetails.production_countries.map(country => country.name).join(", "): 'Unknown'
					}
				</span>
			</p>
			<p class="mb-2 font-bold md:text-2xl">
				Overview:
				<span class="bg-slate-700 px-2 rounded-xl text-sm md:text-xl">
					{mediaDetails.overview || 'No overview available'
					}
				</span>
			</p>
		</div>
	</main>
</Layout>
): Array.from({
	length: 10
}).map((_,) => (
	<p>
		Loaddoongg,,,,
	</p>
))}